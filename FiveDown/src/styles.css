/* Container for the table */
.outer-box {
	margin: 0 auto;
	width: 90%;
	max-width: 100%;
}

/* Table base styling with fade-in animation */
table {
	margin-top: -1px;
	width: 100%;
	border: 1px solid var(--color-border);
	background-color: var(--color-surface);
	box-shadow: var(--shadow-md);
	border-radius: var(--border-radius-lg);
	overflow: hidden;
	position: relative;
	z-index: 10;
	will-change: opacity, transform;
	animation: tableAppear 0.6s ease-out;
}

@keyframes tableAppear {
	from {
		opacity: 0;
		transform: translateY(20px);
	}
	to {
		opacity: 1;
		transform: translateY(0);
	}
}

/* Table header styling */
thead {
	position: relative;
	z-index: 15;
	border-bottom: 2px solid var(--color-border);
}

/* Rounded corners for first and last header cells */
thead tr:first-child th:first-child {
	border-top-left-radius: var(--border-radius-xl);
}

thead tr:first-child th:last-child {
	border-top-right-radius: var(--border-radius-lg);
}

/* Enhanced table header styles with centered text */
th {
	background-color: var(--color-primary);
	font: 600 1rem/1.5 'Roboto', sans-serif;
	color: var(--color-surface);
	text-transform: uppercase;
	letter-spacing: 0.05em;
	padding: var(--spacing-md) var(--spacing-lg);
	text-align: center;
	transition: all var(--animation-duration) var(--animation-timing);
	position: relative;
	border: 1px solid var(--color-border);
	z-index: 16;
}

/* Hover effect for header cells */
th:hover {
	background-color: var(--color-primary-dark);
	transform: scale(1.05);
	box-shadow: var(--shadow-md);
}

/* Keep description column left-aligned */
th.description {
	text-align: left;
}

/* Improved alignment for specific columns */
th.result,
th.formula,
th.min,
th.unit {
	text-align: center;
}

/* Multi-line header text with ellipsis */
th .header-text {
	display: -webkit-box;
	-webkit-line-clamp: 2;
	-webkit-box-orient: vertical;
	overflow: hidden;
	text-overflow: ellipsis;
	max-height: 2.4em;
}

/* Sort indicator styles */
th.sortable {
	cursor: pointer;
}

th.sortable::after {
	content: '↕';
	position: absolute;
	right: var(--spacing-sm);
	top: 50%;
	transform: translateY(-50%);
	color: var(--color-surface);
	font-size: 0.875rem;
}

/* Result column header styling */
td.result {
	width: auto;
	max-width: 200px;
	white-space: nowrap;
	overflow: hidden;
	text-overflow: ellipsis;
	color: var(--color-primary-dark);
	font-family: 'Roboto Mono', monospace;
	transition: all var(--animation-duration) var(--animation-timing);
	height: 3em;
	line-height: 3em;
	position: relative;
	z-index: 1;
}

th.result:hover {
	z-index: 100;
	background-color: var(--color-surface);
	box-shadow: var(--shadow-md);
	overflow: visible;
	white-space: normal;
}

/* Drag handle for result column */
th.result:before {
	content: '⋮⋮';
	position: absolute;
	left: 8px;
	top: 50%;
	transform: translateY(-50%);
	cursor: move;
	color: rgba(255, 255, 255, 0.7);
	font-size: 14px;
}

/* Unit column styling */
th.unit {
	border-top-left-radius: var(--border-radius-lg);
	overflow: hidden;
	position: relative;
	z-index: 16;
	background-color: var(--color-primary);
	transition: background-color var(--animation-duration) var(--animation-timing);
}

th.unit:hover {
	background-color: var(--color-primary-dark);
}

/* Unit column border overlay */
th.unit::after {
	content: '';
	position: absolute;
	inset: 0;
	border-top-left-radius: var(--border-radius-lg);
	pointer-events: none;
	border: 1px solid var(--color-border);
	z-index: 1;
}

th:last-child {
	border-top-right-radius: var(--border-radius-lg);
}

/* Add column header styling */
th.alt-add {
	position: relative;
	width: 2.5rem;
	cursor: pointer;
	border-top-left-radius: var(--border-radius-xl);
	border-top-right-radius: var(--border-radius-xl);
	border: 1px solid var(--color-border);
	background-color: var(--color-secondary);
	padding: var(--spacing-md) var(--spacing-lg);
	text-align: center;
	font-weight: 600;
	color: var(--color-surface);
	box-shadow: var(--shadow-md);
	transition: all var(--animation-duration) var(--animation-timing);
	z-index: 17;
	overflow: hidden;
}

/* Hover effect for add column header */
th.alt-add:hover {
	background-color: var(--color-secondary-dark);
	transform: translateY(-2px) scale(1.05);
}

/* Plus icon for add column header */
th.alt-add:after {
	content: '';
	position: absolute;
	inset: 0;
	display: flex;
	align-items: center;
	justify-content: center;
	background-image: url("data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' class='ionicon' viewBox='0 0 512 512'%3E%3Cpath fill='none' stroke='white' stroke-linecap='round' stroke-linejoin='round' stroke-width='32' d='M256 112v288M400 256H112'/%3E%3C/svg%3E");
	background-repeat: no-repeat;
	background-position: center;
	background-size: 24px;
}

/* Table body styling */
tbody {
	position: relative;
	z-index: 5;
}

tbody tr {
	border-bottom: 1px solid var(--color-border);
}

/* General cell styling with fade-in animation */
td {
	border: 1px solid var(--color-border);
	padding: var(--spacing-md) var(--spacing-lg);
	font: 500 0.9375rem/1.6 'Roboto', sans-serif;
	color: var(--color-text);
	will-change: opacity;
	animation: cellFade var(--animation-duration) ease-in-out;
	transition: all var(--animation-duration) var(--animation-timing);
	overflow: visible;
	position: relative;
}

@keyframes cellFade {
	from {
		opacity: 0;
	}
	to {
		opacity: 1;
	}
}

td:not(.handle):not(.delete) {
	text-align: left;
}

/* Hover effect for all cells */
td:hover {
	position: relative;
	transform: scale(1.05);
	box-shadow: var(--shadow-md);
	z-index: 99;
}

td:hover:after {
	content: '';
	pointer-events: none;
	position: absolute;
	inset: 0;
	border: 2px solid var(--color-text);
}

/* Handle and delete column styling */
td.handle,
td.delete {
	height: 2.5rem;
	width: 2.5rem;
	cursor: pointer;
	background-color: var(--color-handle);
	padding: 0;
	text-align: center;
	transition: all var(--animation-duration) var(--animation-timing);
}

td.handle:hover,
td.delete:hover {
	background-color: var(--color-handle-hover);
	transform: translateY(-2px) scale(1.05);
}

/* Handle icon */
td.handle:before {
	content: '';
	display: flex;
	height: 100%;
	width: 100%;
	align-items: center;
	justify-content: center;
	background-position: center;
	background-repeat: no-repeat;
	background-image: url("data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' fill='none' stroke='currentColor' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='M3 12h18M3 6h18M3 18h18'/%3E%3C/svg%3E");
}

/* Delete icon */
td.delete:before {
	content: '';
	display: flex;
	height: 100%;
	width: 100%;
	align-items: center;
	justify-content: center;
	background-image: url("data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' class='ionicon' viewBox='0 0 512 512'%3E%3Cpath fill='none' stroke='currentColor' stroke-linecap='round' stroke-linejoin='round' stroke-width='32' d='M368 368L144 144M368 144L144 368'/%3E%3C/svg%3E");
	background-repeat: no-repeat;
	background-position: center;
	background-size: 24px;
	transition: background-image var(--animation-duration) var(--animation-timing);
}

td.delete:hover:before {
	background-image: url("data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' class='ionicon' viewBox='0 0 512 512'%3E%3Cpath fill='none' stroke='%23ef4444' stroke-linecap='round' stroke-linejoin='round' stroke-width='32' d='M368 368L144 144M368 144L144 368'/%3E%3C/svg%3E");
}

/* Input and textarea styling */
input,
textarea {
	width: 100%;
	border-radius: var(--border-radius-sm);
	border: 1px solid var(--color-border);
	padding: var(--spacing-sm) var(--spacing-md);
	font-family: 'Roboto Mono', monospace;
	transition: all var(--animation-duration) var(--animation-timing);
}

input:focus,
textarea:focus {
	border-color: var(--color-primary);
	box-shadow: 0 0 0 3px var(--color-primary-light), var(--shadow-md);
	transform: scale(1.02);
	animation: inputFocus 0.8s ease-in-out;
}

@keyframes inputFocus {
	0% {
		box-shadow: 0 0 0 0 rgba(59, 130, 246, 0.5);
	}
	70% {
		box-shadow: 0 0 0 10px rgba(59, 130, 246, 0);
	}
	100% {
		box-shadow: 0 0 0 0 rgba(59, 130, 246, 0);
	}
}

/* Project menu styling */
.project-menu {
	margin-bottom: 0;
	display: flex;
	flex-wrap: wrap;
	align-items: flex-end;
	gap: var(--spacing-sm);
	border: 1px solid var(--color-border);
	border-bottom: none;
	background-color: var(--color-surface);
	padding: var(--spacing-md) var(--spacing-md) var(--spacing-xs);
	position: relative;
	z-index: 20;
	border-top-left-radius: var(--border-radius-lg);
	border-top-right-radius: var(--border-radius-lg);
}

/* Individual tab styling in project menu */
.project-menu span {
	cursor: text;
	border-top-left-radius: var(--border-radius-xl);
	border-top-right-radius: var(--border-radius-xl);
	border: 1px solid var(--color-border);
	border-bottom: none;
	background-color: var(--color-handle);
	padding: var(--spacing-md) var(--spacing-lg);
	font: 500 0.9375rem/1.5 'Roboto', sans-serif;
	color: var(--color-text-light);
	box-shadow: var(--shadow-sm);
	transition: all var(--animation-duration) cubic-bezier(0.25, 0.8, 0.25, 1);
	min-width: 100px;
}

.project-menu span:hover {
	background-color: var(--color-handle-hover);
	transform: translateY(-3px);
	box-shadow: var(--shadow-md);
}

/* Active tab styling */
.project-menu .active span {
	background-color: var(--color-primary-dark);
	color: var(--color-surface);
	font-weight: 600;
	box-shadow: var(--shadow-md);
	transform: translateY(-2px);
	border-bottom: 2px solid var(--color-surface);
	animation: activeTab 0.5s ease-out;
}

@keyframes activeTab {
	0% {
		transform: scale(1);
	}
	50% {
		transform: scale(1.1);
	}
	100% {
		transform: scale(1);
	}
}

/* Editable tab focus state */
.project-menu span:focus {
	outline: 2px solid var(--color-primary);
	background-color: var(--color-surface);
	color: var(--color-text);
}

/* Sheet actions container */
.sheet-actions {
	display: flex;
	align-items: center;
	margin-left: auto;
	padding-bottom: var(--spacing-md);
}

/* Delete and New sheet buttons */
#delete-sheet,
#new-sheet {
	padding: var(--spacing-sm) var(--spacing-md);
	margin-left: var(--spacing-md);
	border-radius: var(--border-radius-sm);
	font-size: 0.875rem;
	cursor: pointer;
	transition: all var(--animation-duration) var(--animation-timing);
	border: none;
	font-weight: 600;
}

#delete-sheet {
	background-color: var(--color-handle);
	color: var(--color-accent-red);
}

#delete-sheet:hover {
	background-color: var(--color-accent-red-light);
	transform: translateY(-2px);
}

#new-sheet {
	background-color: var(--color-secondary-light);
	color: var(--color-secondary);
	border: 1px solid var(--color-secondary);
	border-radius: var(--border-radius-md);
}

#new-sheet:hover {
	background-color: var(--color-secondary-light);
	transform: translateY(-2px);
}

.sheet-delete {
	display: inline-flex;
	align-items: center;
	justify-content: center;
	width: 24px;
	height: 24px;
	background-color: transparent;
	border: none;
	border-radius: 50%;
	color: var(--color-text-light);
	font-size: 18px;
	cursor: pointer;
	transition: all var(--animation-duration) var(--animation-timing);
	margin-left: var(--spacing-sm);
}

.sheet-delete:hover {
	background-color: var(--color-accent-red-light);
	color: var(--color-accent-red);
}

.sheet-delete::before {
	line-height: 1;
}

/* Styles for unselected sheets */
.project-menu .inactive {
	transform: translateY(2px);
}

/* Styles for formula cells */
td.formula {
	width: auto;
	max-width: 200px;
	white-space: nowrap;
	overflow: hidden;
	text-overflow: ellipsis;
	color: var(--color-primary-dark);
	font-family: 'Roboto Mono', monospace;
	transition: all var(--animation-duration) var(--animation-timing);
}

td.formula:hover,
td.formula:focus {
	white-space: normal;
	overflow: visible;
	z-index: 10;
	position: relative;
	background-color: var(--color-surface);
	box-shadow: var(--shadow-md);
}

/* Styles for result cells, including error cells */
td.result {
	width: auto;
	max-width: 200px;
	white-space: nowrap;
	overflow: hidden;
	text-overflow: ellipsis;
	color: var(--color-primary-dark);
	font-family: 'Roboto Mono', monospace;
	transition: all var(--animation-duration) var(--animation-timing);
	height: 3em;
	line-height: 3em;
}

/* Base styles for error state */
td.result.error {
	position: relative;
	z-index: 2;
	background-color: var(--color-accent-red-light);
	color: var(--color-accent-red);
	overflow: visible;
}

/* Error icon */
/*
td.result.error::before {
	content: '⚠️';
	position: absolute;
	left: 5px;
	top: 0.4em;
	font-size: 0.9em;
}*/

/* Error text styles */
td.result.error > div {
	position: absolute;
	left: 0;
	top: 0;
	white-space: nowrap;
	overflow: visible;
	background-color: var(--color-accent-red-light);
	padding: 0 5px;
	height: 100%;
	display: flex;
	align-items: center;
	box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
	border-radius: var(--border-radius-sm);
}
/* Cell interaction states */
td:focus-within {
	z-index: 102;
}
td.result + td {
	position: relative;
	z-index: 1;
}
td.result.error:hover {
	z-index: 101;
}

/* Hover effect */
td.result.error:hover > div {
	z-index: 20;
	box-shadow: 0 0 15px rgba(0, 0, 0, 0.2);
}

/* Error shake animation */
@keyframes errorShake {
	0%,
	100% {
		transform: translateX(0);
	}
	10%,
	30%,
	50%,
	70%,
	90% {
		transform: translateX(-2px);
	}
	20%,
	40%,
	60%,
	80% {
		transform: translateX(2px);
	}
}

td.result.error {
	animation: errorShake 0.5s ease-in-out;
}

td.result.error {
	animation: errorShake 0.6s ease-in-out;
}

/* Remove ellipsis */
td.result.error::after {
	content: none;
}

/* Ensure table rows can accommodate increased cell height */
tbody tr {
	height: auto !important;
}

/* Read-only cell styling */
td.readonly {
	background-color: var(--color-handle);
	color: var(--color-text-light);
}

/* Output cell styling */
td.output {
	background-color: var(--color-output);
	font-weight: 600;
	color: var(--color-output-text);
}

/* Alternate add button styling */
.alt-add {
	cursor: pointer;
	background-color: var(--color-primary-light);
	color: var(--color-primary-dark);
	transition: all var(--animation-duration) var(--animation-timing);
}

.alt-add:hover {
	background-color: var(--color-primary);
	transform: translateY(-2px) scale(1.05);
}

/* Close button for result columns */
.close-res {
	cursor: pointer;
	background: none;
	border: none;
	color: rgba(255, 255, 255, 0.7);
	font-size: 16px;
	font-weight: bold;
	position: absolute;
	right: 8px;
	top: 50%;
	transform: translateY(-50%);
	transition: all var(--animation-duration) var(--animation-timing);
	padding: 4px;
	line-height: 1;
}

.close-res:hover {
	color: var(--color-surface);
	transform: translateY(-50%) scale(1.1);
}

/* Styles for specific columns */
th.formula,
th.min,
th.unit,
td.formula,
td.min,
td.unit {
	position: relative;
}

th.formula:last-child,
th.min:last-child,
th.unit:last-child {
	border-top-right-radius: 0;
}

tr:last-child td.formula:last-child,
tr:last-child td.min:last-child,
tr:last-child td.unit:last-child {
	border-bottom-right-radius: var(--border-radius-lg);
}

th.formula {
	border-top-right-radius: var(--border-radius-lg);
}

/* Row animation styles */
tbody > tr {
	transition: all var(--animation-duration) var(--animation-timing);
	opacity: 1;
	max-height: 50px;
	overflow: hidden;
}

@keyframes addRow {
	from {
		opacity: 0;
		max-height: 0;
		transform: translateY(-20px);
	}
	to {
		opacity: 1;
		max-height: 50px;
		transform: translateY(0);
	}
}

@keyframes removeRow {
	from {
		opacity: 1;
		max-height: 50px;
		transform: translateY(0);
	}
	to {
		opacity: 0;
		max-height: 0;
		transform: translateY(-20px);
	}
}

tbody > tr.row-add {
	animation: addRow var(--animation-duration) var(--animation-timing);
}

tbody > tr.row-remove {
	animation: removeRow var(--animation-duration) var(--animation-timing);
}

/* Drag and drop styles */
tr.dragging {
	opacity: 0.5;
	background-color: var(--color-primary-light);
	transform: scale(1.02);
	transition: all var(--animation-duration) var(--animation-timing);
}

tr.drop-target {
	border-top: 2px solid var(--color-primary);
	transition: all var(--animation-duration) var(--animation-timing);
}

/* Column drag and drop styles */
th.result.dragging {
	opacity: 0.5;
	background-color: var(--color-accent-blue-light);
}

th.result.drop-target::after {
	content: '';
	position: absolute;
	top: 0;
	bottom: 0;
	width: 4px;
	background-color: var(--color-primary);
}

/* Formula change highlight */
@keyframes formulaChange {
	0%,
	100% {
		background-color: transparent;
	}
	50% {
		background-color: var(--color-primary-light);
	}
}

td.formula.changed {
	animation: formulaChange 1s ease-in-out;
}

/* Value change highlight */
@keyframes valueChange {
	0%,
	100% {
		background-color: transparent;
	}
	50% {
		background-color: var(--color-secondary-light);
	}
}

td.result.changed {
	animation: valueChange 1s ease-in-out;
}

/* Table switch animation */
@keyframes tableSwitch {
	0% {
		opacity: 0;
		transform: translateY(20px);
	}
	100% {
		opacity: 1;
		transform: translateY(0);
	}
}

table.switching {
	animation: tableSwitch 0.5s ease-out;
}

/* Responsive design for smaller screens */
@media (max-width: 768px) {
	body {
		font-size: 14px;
	}

	td,
	th {
		padding: var(--spacing-md) var(--spacing-lg);
	}

	.project-menu span {
		padding: var(--spacing-sm) var(--spacing-md);
		font-size: 0.875rem;
	}

	th.result,
	th.alt-add {
		padding: var(--spacing-sm) var(--spacing-md);
	}

	td.handle,
	td.delete {
		height: 2rem;
		width: 2rem;
	}

	.close-res {
		font-size: 14px;
		right: 4px;
	}

	th .header-text {
		-webkit-line-clamp: 1;
		max-height: 1.2em;
	}
}

/* Accessibility improvements */
@media (prefers-reduced-motion: reduce) {
	*,
	*::before,
	*::after {
		animation-duration: 0.01ms !important;
		animation-iteration-count: 1 !important;
		transition-duration: 0.01ms !important;
		scroll-behavior: auto !important;
	}
}

/* High contrast mode adjustments */
@media (prefers-contrast: high) {
	:root {
		--color-primary: #000000;
		--color-primary-dark: #000000;
		--color-secondary: #000000;
		--color-secondary-dark: #000000;
		--color-background: #ffffff;
		--color-surface: #ffffff;
		--color-border: #000000;
		--color-text: #000000;
		--color-text-light: #000000;
		--color-accent-blue: #000000;
		--color-accent-blue-dark: #000000;
		--color-handle: #ffffff;
		--color-handle-hover: #e0e0e0;
	}

	table,
	th,
	td {
		border-color: var(--color-border);
	}

	.project-menu span,
	th.result,
	th.alt-add {
		border-color: var(--color-border);
		color: var(--color-surface);
		background-color: var(--color-text);
	}

	td.handle:hover,
	td.delete:hover {
		background-color: var(--color-handle-hover);
	}
}
