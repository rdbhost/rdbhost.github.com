
create a module 'table-drag.js', in directory 'js'

With attached file 'index.html' apply the requested javascript to the table#main-sheet

The columns with class 'result' (there is one in the source, but will in time have more) will be draggable, but only with respect
to each other. ie: all result columns will remain adjacent.  The column headers <th> are drag handles, but the columns should move in 
all rows.  Use delegation, so that handlers stay effective when columns are dynamically added.

Assume that functions adding result columns will provide the draggable attribute and the class result.  Also assume that the 
'add-result' and 'formula' columns will always be present.

The rows are also draggable.  The left column 'handle' is the drag handle for dragging the row.  Use delegation, so that handlers 
stay effective when rows are added or relocated.


On DOMLoad, perform the following:

1) find a blank row and save it as an attribute on table, called 'blank_row'
     a blank row is one where the cell text is "" for the columns 'description', 'name', 'formula', 'unit' and all 'result' columns.
2) setup the drag handlers described above
3) delete all rows
4) run ensure_blank_five

The function ensure_blank_five will look at the last rows in the table, and ensure that exactly the last five rows are blank. Remove 
extra blank lines, and insert blanks as necessary.  The blanks can be copied from the 'blank_row' attribute.

Assume that a blank row is available, and throw exceptions if not, or if blank row data attribute is not available.

Also, create a test suite, as tests/table-drag-tests.js

